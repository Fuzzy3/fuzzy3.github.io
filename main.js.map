{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/services/spotify.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<h1>Spotify Playlist Creater</h1>\\r\\n<hr>\\r\\n<section>\\r\\n    <div class=\\\"container\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n                <button class=\\\"btn btn-primary\\\" (click)=\\\"authorize()\\\">\\r\\n                    Login\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n            <input type=\\\"text\\\" (input)=\\\"searchForArtist($event.target.value)\\\">\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12 artist-col\\\" *ngFor=\\\"let artist of artists\\\">\\r\\n                {{artist}}\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</section>\"","module.exports = \".artist-col {\\n  background-color: black;\\n  color: white; }\\n\"","import { SpotifyService } from './services/spotify.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Artist } from './models/artist.model';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent implements OnInit{\r\n  title = 'spotify-playlist-creater';\r\n\r\n  private artists: Artist[];\r\n\r\n  constructor(private spotify: SpotifyService) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    \r\n  }\r\n\r\n  authorize() {\r\n    this.spotify.authenticate();\r\n  }\r\n\r\n  public searchForArtist(value: string) {\r\n    this.spotify.searchForArtist(value).subscribe(artists => {\r\n      this.artists = artists;\r\n      console.log(this.artists);\r\n    });\r\n  }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Artist } from './../models/artist.model';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { Observable, of } from 'rxjs';\r\nimport {catchError, publishLast, refCount, map} from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SpotifyService {\r\n\r\n  private clientId =  '2840682a5a41493592dd18bbe2e26183';\r\n  private httpParams: HttpParams = new HttpParams();\r\n  httpOptions = {\r\n    headers: new HttpHeaders({\r\n      'Content-Type':  'application/x-www-form-urlencoded',\r\n      'Access-Control-Allow-Origin': '*',\r\n      'Access-Control-Allow-Headers': 'Origin, X-Requested-With, Content-Type, Accept'\r\n    }),\r\n    params: this.httpParams\r\n  };\r\n\r\n\r\n  constructor(private http: HttpClient) {\r\n    this.httpParams.append('client_id', this.clientId);\r\n    this.httpParams.append('redirect_uri', 'http://localhost:4002/');\r\n    this.httpParams.append('scope', 'user-read-private%20user-read-email');\r\n    this.httpParams.append('response_type', 'token');\r\n    this.httpParams.append('state', '123');\r\n  }\r\n\r\n  public searchForArtist(searchString: string) {\r\n    const apiString = 'https://api.spotify.com/v1/search?q=' + searchString + '&type=artist&market=DK';\r\n    return this.http.get<Object>(apiString).pipe(\r\n      map(response => response[\"artists\"].items.map(artist => artist.name)),\r\n      catchError((error: Response) => {\r\n        console.error('Kunne ikke lÃ¦se produkter', error.statusText);\r\n        return of([]);\r\n      }),\r\n      publishLast(),\r\n      refCount()\r\n    );\r\n  }\r\n\r\n  public authenticate() {\r\n    const authUrl = 'https://accounts.spotify.com/authorize?client_id='\r\n      + this.clientId\r\n      + '&redirect_uri=https://fuzzy3.github.io/&scope=user-read-private%20user-read-email&response_type=token&state=123';\r\n    this.http.get(authUrl, this.httpOptions).pipe()\r\n    .subscribe(response => {\r\n      console.log(response);\r\n    });\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n\r\n"],"sourceRoot":""}